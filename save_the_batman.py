#importing os to clear the screen
import os
#importing random to choose a random name
import random

#clear function to clear the screen
#posix is the name of os for linix
def clear():
    if os.name == 'posix':
        os.system('clear')
    else:
        os.system('cls')

#intro page ascii art
intro = '''
                     Tb.          Tb.
                     :$$b.        $$$b.
                     :$$$$b.      :$$$$b.
                     :$$$$$$b     :$$$$$$b
                      $$$$$$$b     $$$$$$$b
                      $$$$$$$$b    :$$$$$$$b
                      :$$$$$$$$b---^$$$$$$$$b
                      :$$$$$$$$$b        ""^Tb
                       $$$$$$$$$$b    __...__`.
                       $$$$$$$$$$$b.g$$$$$$$$$pb
                       $$$$$$$$$$$$$$$$$$$$$$$$$b
                       $$$$$$$$$$$$$$$$$$$$$$$$$$b
                       :$$$$$$$$$$$$$$$$$$$$$$$$$$;
                       :$$$$$$$$$$$$$^T$$$$$$$$$$P;
                       :$$$$$$$$$$$$$b  "^T$$$$P' :
                       :$$$$$$$$$$$$$$b._.g$$$$$p.db
                       :$$$$$$$$$$$$$$$$$$$$$$$$$$$$;
                       :$$$$$$$$"""^^T$$$$$$$$$$$$P^;
                       :$$$$$$$$       ""^^T$$$P^'  ;
                       :$$$$$$$$    .'       `"     ;
                       $$$$$$$$;   /                :
                       $$$$$$$$;           .----,   :
                       $$$$$$$$;         ,"          ;
                       $$$$$$$$$p.                   |
                      :$$$$$$$$$$$$p.                :
                      :$$$$$$$$$$$$$$$p.            .'
                      :$$$$$$$$$$$$$$$$$$p...___..-"
                      $$$$$$$$$$$$$$$$$$$$$$$$$;
   .db.               $$$$$$$$$$$$$$$$$$$$$$$$$$
  d$$$$bp.            $$$$$$$$$$$$$$$$$$$$$$$$$$;
 d$$$$$$$$$$pp..__..gg$$$$$$$$$$$$$$$$$$$$$$$$$$$
d$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$p._            .gp.
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$p._.ggp._.d$$$$b
                         _   _               _           _      
 ___  ____ _   _____ 	| |_| |__   ___     | |__   __ _| |_ _ __ ___   __ _ _ __
/ __|/ _  \ \ / / _ \	| __| '_ \ / _ \    | '_ \ / _` | __| '_ ` _ \ / _` | '_  '
\__ \ (_| |\ V /  __/	| |_| | | |  __/    | |_) | (_| | |_| | | | | | (_| | | | |
|___/\__,_| \_/ \___|	\__ |_| |_|\___|    |_.__/ \__,_|\__|_| |_| |_|\__,_|_| |_|
'''

#Ascii art on winning
won = '''
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::::::::::-'    `-::::::::::::::::::
::::::::::::::::::::::::::::::::::::::::::-'          `::::::::::::::::
:::::::::::::::::::::::::::::::::::::::-  '   /(_M_)\  `:::::::::::::::
:::::::::::::::::::::::::::::::::::-'        |       |  :::::::::::::::
::::::::::::::::::::::::::::::::-         .   \/~V~\/  ,:::::::::::::::
::::::::::::::::::::::::::::-'             .          ,::::::::::::::::
:::::::::::::::::::::::::-'                 `-.    .-::::::::::::::::::
:::::::::::::::::::::-'                  _,,-::::::::::::::::::::::::::
::::::::::::::::::-'                _,--:::::::::::::::::::::::::::::::
::::::::::::::-'               _.--::::::::::::::::::::::#####:::::::::
:::::::::::-'             _.--:::::::::::::::::::::::::::#####:::::####
::::::::'    ##     ###.-::::::###:::::::::::::::::::::::#####:::::####
::::-'       ###_.::######:::::###::::::::::::::#####:##########:::####
:'         .:###::########:::::###::::::::::::::#####:##########:::####
     ...--:::###::########:::::###:::::######:::#####:##########:::####
 _.--:::##:::###:#########:::::###:::::######:::#####:#################
'#########:::###:#########::#########::######:::#####:#################
:#########:::#############::#########::######:::#######################
##########:::########################::################################
##########:::##########################################################
##########:::##########################################################
#######################################################################
#######################################################################
#######################################################################
#######################################################################
'''

#ascii art on loosing
lost = '''
⠄⠄⠄⠠⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠄⠄⠄⠄⠠⠠⣤⣤⣤⠠⣤⣬⣬⣤⣬
⠄⠠⠠⠄⠠⠄⠄⠄⠠⠄⠄⠄⠄⠄⠠⠠⠠⠄⠠⠄⠠⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠠⠠⠠⠠⠠⠠⠠⠠⠠⣤⣤⠠⣤⣤⠠⣤⣬⣬⣬
⠄⠠⠄⠠⠄⠠⠄⠄⠄⠠⠄⠠⣤⣬⣬⣬⣤⠠⠠⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠠⠠⠠⠄⠄⠄⠠⠄⠠⠠⠠⠠⠠⠠⠄⠠⣤⠠⠠⣬⣬
⠠⠠⠠⠄⠠⠄⠠⠄⠄⠄⠠⣬⠟⣽⣽⣽⣽⣬⣤⠠⠠⠄⠄⠄⠠⠄⠄⠄⠄⠄⠠⠠⠄⠄⠠⠄⠠⠠⠠⠠⣤⣤⠠⠠⠠⠠⣤⠠⠠⠟
⠄⠠⠠⠠⠄⠠⠄⠄⠠⣬⣬⠟⣽⣽⣽⣽⣽⣽⣽⣽⠟⣤⠠⠄⠠⠄⠄⠄⠄⠠⠠⠠⠠⠠⠠⠠⠄⠄⠄⠄⠄⠠⠠⣤⠠⠠⠠⣤⠠⣬
⠠⠄⠠⠄⠠⠄⠄⠄⣬⠟⣤⠟⣽⠟⠟⠟⠟⣽⣽⣽⣿⣽⣽⠟⣤⣬⣤⠠⣬⣤⣬⣬⠟⠟⣽⠟⣬⠄⠄⠠⠄⠄⠠⠠⣬⠄⣤⠠⠠⣤
⠄⠠⠠⠠⠄⠠⠄⣤⠟⣤⣬⠟⣬⠟⣬⠟⣽⣽⣽⣽⣽⣽⣽⣿⣿⣿⣽⣽⣿⣽⣽⣽⣽⣿⣿⣿⣿⣽⠄⠠⣤⠠⠠⠠⣬⣬⠄⠠⠠⣬
⠠⠄⠠⠠⠠⠄⠠⣤⣬⣤⣬⣬⠟⠟⣽⠟⠟⠟⣽⣽⣿⣽⣿⣿⣿⣿⣿⠟⣽⣽⣿⣿⣽⣽⣿⣿⣿⣿⣤⠠⣽⣬⠠⠠⣤⣤⠄⠠⣤⣤
⠄⠠⠄⠠⠄⠠⣤⣬⣤⣤⣬⠟⠟⠟⠟⣽⣽⣿⣿⣽⠟⠟⠟⠟⠟⣽⣽⣿⣽⣽⣽⣽⣽⣽⣽⠟⠟⣽⣬⠠⠟⠟⠠⠠⣤⠄⠄⠠⠠⣤
⠠⠄⠠⠠⠄⠠⣤⠟⣬⣤⠟⠟⠟⣬⣬⣬⠟⠟⣽⣽⣽⣽⣽⠟⠟⠟⠟⠟⠟⠟⣽⣽⣿⣽⣽⣽⠟⣽⣬⣬⣤⠟⠄⠄⣬⠠⠄⠄⠄⠄
⠄⠠⠠⠠⠄⠠⣤⣬⣬⣤⣬⣬⣬⠟⠟⠟⠟⠟⣬⠟⣬⠟⠟⣽⣽⣽⣽⣽⣽⣽⠟⣽⠟⣽⠟⣽⠟⠟⠟⣬⣿⣤⠄⣤⠠⣬⠠⠄⠄⠠
⠠⠄⠄⠄⠄⠄⣬⣬⣬⣤⣤⠠⣤⣬⣤⣬⣿⣿⣬⣬⣬⠟⣬⣬⠟⠟⠟⣽⣽⠟⠟⠟⠟⠟⠟⣽⣽⣽⣽⠟⣽⣤⠄⣬⠠⠄⣬⣤⠄⠠
⠄⠠⠄⠠⠄⠄⣬⣽⣬⣬⣬⠠⠄⠠⠄⠠⣬⠟⠟⣿⣿⣿⣽⣽⣿⣿⣽⣿⠟⣬⣽⣽⣿⣿⣿⣿⣿⣤⠠⠟⠟⠠⣤⣤⣤⠄⠠⣤⣬⠠
⠠⠄⠄⠠⠠⠄⣤⠟⣽⠟⣤⠄⠄⠄⠄⠄⠠⠄⠠⣤⣽⣽⣽⣿⣿⠟⣿⣿⣿⣿⣿⣿⣿⠟⣬⠠⠄⠄⠄⠄⣤⣤⣽⣬⣤⣤⠄⠄⣤⣬
⠄⠄⠄⠠⣤⠠⣬⣬⠟⣽⠠⠄⠄⠠⠄⠄⠄⠄⠄⠄⠄⠠⣽⣿⣬⠟⣿⣿⣽⣿⣿⠟⠠⠄⠄⠄⠠⣤⠠⠄⠄⠠⠟⣤⠄⣬⣤⠄⠄⣤
⠠⠄⠄⠠⣬⣤⠟⠟⣬⣤⠄⠄⠄⠄⠠⠄⠄⠄⠠⠄⠄⠄⠠⣤⠟⣿⣽⣽⠟⣤⣤⠄⠄⠄⠄⠄⠠⣤⣤⠄⠠⠟⣤⠠⠄⠄⣤⣤⠠⣤
⠄⠠⠄⠠⣤⣤⣬⣤⠟⣬⠄⠄⠄⠄⠠⠠⠄⠟⣿⣿⠟⠠⠄⠄⠟⣽⣽⠟⠟⠠⠄⠄⠄⠠⠟⣽⣤⠄⠄⠄⠠⣿⣽⠄⣤⠠⠄⠠⠠⣤
⠠⠄⠄⠄⣤⠠⣬⣤⣬⣤⠠⠠⠄⠄⠄⠄⠠⠠⠠⠠⠄⠄⠠⠄⠠⣽⣿⣿⣤⠄⠄⠄⠄⠠⠟⣬⠠⠄⠄⠄⣬⣿⣬⠄⣤⣬⣤⠄⠄⣤
⠠⠠⠄⠄⠠⠠⣤⣬⠟⣤⣤⣤⠠⠠⠠⠄⠄⠄⠄⠄⠄⣤⠠⣤⣬⣿⣿⣿⣽⠟⣤⠄⠄⠄⠄⠄⠄⠠⠠⣤⣽⣽⠄⠠⠄⣤⣬⣤⣤⣤
⠠⠄⠄⠄⠄⠄⣬⣤⣽⣬⣬⣿⠟⣬⣿⣤⠟⣬⣽⣽⠟⠟⠟⣽⣽⣽⣿⣿⣽⣿⣿⣿⣽⣬⣤⠄⠄⣤⣿⣿⣿⠟⠄⠄⠠⠠⣬⣤⣤⠠
⠄⠠⠄⠠⠄⠄⣤⠠⣤⣤⠟⣿⠟⣽⣿⣿⣿⣿⣿⣽⠠⣬⣽⣬⠟⣿⣿⣿⣽⣿⣽⣿⣿⣿⣿⣿⠟⣽⣽⣿⣿⣽⠄⠄⠠⣬⠠⠠⠠⣬
⠠⠄⠠⠄⠄⠄⣤⠠⠠⠄⣽⣿⣽⣽⣿⣿⣿⠟⠟⣤⣽⠟⣤⣬⣽⣿⣿⣿⣿⣽⠟⣽⣿⣿⣿⣿⣿⣿⣽⣿⣽⣤⠄⠠⣤⠠⠠⠠⣤⣬
⠄⠠⠄⠠⠄⠄⣤⣬⠄⠄⣤⣽⣿⣽⣿⣽⣬⣤⣤⣬⣿⣿⣽⣽⣿⣿⣿⣿⣿⣿⣿⠟⣤⣤⣽⣿⣿⣿⣽⣿⠟⠠⠄⣤⠠⠠⠠⠠⣤⣤
⠠⠄⠠⠠⠠⠄⠠⣬⣤⠄⠄⣬⣽⣽⣬⣤⣤⣬⠟⣤⠄⠄⠠⣬⣽⣿⣿⣽⠟⣽⣽⣽⣿⠟⣤⣬⣿⣽⣬⣬⠟⠄⠠⠠⠠⠄⠠⠠⣤⣤
⠄⠄⠄⠠⠄⠄⠄⣤⣬⣤⠄⠄⣤⣤⣽⣿⣽⣤⣽⣽⠟⠟⣬⠟⠟⠟⠟⠟⣽⣿⣿⣿⣿⣽⣿⣤⠄⣬⣬⣽⠄⠄⣤⠠⠠⠠⠠⣤⣤⣤
⠄⠄⠠⠄⠠⠄⠄⠄⣤⠟⣬⠄⠄⠠⠟⣤⠠⠄⣤⣬⠟⣽⣽⣿⣿⣽⠟⣿⣿⣿⣿⠟⠠⠄⣤⠠⠄⣬⣿⠠⠄⠄⠠⣤⠠⠄⠠⣤⠄⠠
⠄⠠⠄⠠⠄⠄⠄⠄⠄⣤⣬⣬⠄⠄⣤⠠⠄⠠⠄⠄⠄⠄⠄⠄⠠⠠⠠⠠⠄⠄⠄⠄⠄⠄⠄⣤⣽⣽⠄⠄⠄⠄⠄⠠⠠⠠⣤⠠⠄⠠
⠄⠄⠠⠄⠄⠄⠠⠄⠠⠄⠄⣤⣬⠠⠠⣤⠠⠄⠠⠠⣤⠠⣤⣤⣤⣤⠠⠄⠠⠄⠠⣤⣤⠄⠟⣽⣤⠄⠄⠄⠄⠄⠠⠠⠠⠠⠠⠠⣤⣤
⠄⠠⠄⠠⠄⠠⠄⠠⠄⠄⠄⠄⣤⣬⣤⣬⠟⠠⠠⣤⣤⣤⠠⠠⠄⠄⠄⠠⣤⣬⠟⣽⠟⣽⠟⠄⠄⠄⠠⠠⠄⠄⠄⠠⠠⣤⠠⠠⠠⣤
⠠⠄⠄⠄⠄⠄⠠⠄⠄⠄⠄⠄⠠⠠⣤⣤⠟⠟⣤⣬⣤⠠⣤⣤⣤⣬⣬⣬⣽⣿⣿⣿⣽⠠⠄⠄⠄⠄⠠⠠⠄⠄⠄⠄⠄⠠⠠⠠⠠⠠
⠄⠄⠄⠠⠄⠠⠄⠠⠄⠄⠄⠠⠄⠠⠄⠠⠠⣬⠟⠟⣽⠟⠟⣽⣽⣿⣿⣿⣿⣿⣿⠟⠄⠄⠄⠄⠄⠄⠄⣤⠠⠄⠄⠠⠠⠠⠄⠠⠠⠠
⠄⠄⠠⠄⠄⠄⠠⠄⠄⠄⠠⠄⠄⠄⠄⠄⠄⠠⣬⠟⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣬⠄⠠⠄⠄⠄⠠⠄⠠⠠⠠⠄⠠⠠⠠⠠⠠⠠⠠⠠
⠄⠠⠄⠄⠄⠠⠄⠄⠄⠄⠄⠠⠄⠠⠄⠄⠄⠠⠄⠠⣬⣿⣿⣿⣿⣿⣿⣿⣽⠠⠄⠠⠠⠄⠄⠄⠄⠠⠠⣤⠠⠠⠄⠠⠠⠠⠠⠠⠠⠠
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠄⠄⠠⠄⠠⠄⠄⠄⠠⠠⣤⣤⣤⣤⣤⠄⠄⠄⠠⠠⠠⠄⠄⠄⠠⠠⠠⠠⣤⠠⠄⠠⠠⠠⠠⠄⠠⠠
⠄⠠⠄⠠⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠄⠄⠠⠄⠠⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⠄⠠⠠⠄⠄⠠⠠⠠⠠⠠⠠⠠⠠⠠⠠⠠⠠⠠⠠⠠
'''

#different stages of batman while getting damages
batman = ['''
             .  .
             |\_|'
             | a_a'
             | | "]
         ____| '-\___
        /.----.___.-''
       //        _    '
      //   .-. (~v~) /|
     |'|  /\:  .--  / '
    // |-/  \_/____/\/~|
   |/  \ |  []_|_|_] \ |
   | \  | \ |___   _\ ]_}
   | |  '-' /   '.'  |
   | |     /    /|:  |
   | |     |   / |:  /"
   | |     /  /  |  /  "
   | |    |  /  /  |    "
   \ |    |/\/  |/|/\    "
    \|\ |\|  |  | / /\/\__"
     \ \| | /   | |__
          / |   |____)
          |_/
Good Start!
''', '''
             .  .
             |\_|'
             | a_a'
             | | "]
         ____| '-\___
        /.----.___.-''
       //        _    '
      //   .-. (~v~) /|
     |'|  /\:  .--  / "
    // |-/  \_/____/\/~"
   |/  \ |  []_|_|_] ''"
   | \  | \ |___   _\ "..
   | |  ' ' /   ' '  |   ""
   | |     /    /|:  |
   | |     |   / |:  /"
   | |     /  /  |  /  "
   | |    |  /  /  |    "
   \ |    |/\/  |/|/\    "
    \|\ |\|  |  | / /\/\__'
     ' \| | /   | |__
          / |   |____)
          |_/
Joker cutoff his Right Hand
''', '''
             .  .
             |\_|'
             | a_a'
             | | "]
         ____| '-\___
        /.----.___.-''
       //        _    '
      //   .-. (~v~) /|
     |'|  /\:  .--  / /
    // |-/  \_/____/\/
   |/  \ |  []_|_|_] 
   | \  | \ |___   _\ 
   | |  '-' /   '.'  |  
   | |     /    /|:  |
   | |     |   / |:  /
   | |     /  /  |  / 
   | |    |  /  /  |   
   \ |    |/\/  ''  "
    \|\ |\|  |   ""
     \ \| | /       "
          / |   
          |_/
Joker cutoff Batman's Right Leg
''', '''
             .  .
             |\_|'
             | a_a'
             | | "]
         ____| '-\___
        /.----.___.-''
       //        _    '
      //   .-. (~v~) /|
     |'|  /\:  .--  / /
    // |-/  \_/____/\/
   |/   "   []_|_|_] 
   | \  \.  |___   _\ 
   | |   '| /   '.'  |  
   | |     /    /|:  |
   | |     |   / |:  /
   | |     /  /  |_ / 
   | |    |  /    
   \ |    |/\/  
    \|\ |\|  |   
     \ \| | /     
          / |   
          |_/
Joker cutoff Batman's Left Hand
''', '''
             .  .
             |\_|'
             | a_a'
             | | "]
         ____| '-\___
        /.----.___.-''
       //        _    '
      //   .-. (~v~) /|
     |'|  /\:  .--  / /
    // |_/  \_/____/\/
   |/       []_|_|_] 
   | \      |___   _\ 
   | |      /   '.'  |  
   | |     /    /|:  |
   | |     |   / |:  /
   | |     /  /  |_ / 
   | |    |  ""    
   \ |    |"  
    \|\ |\| "".    
     \ \|    / /
             
          
Joker cutoff Batman's Left Leg
Now this is your last chance to save Batman
''']

def toArray(str):
    word = []
    for s in str:
        word += s
    return word

#makes the status at the beginning
def makeStatus(str):
    status = []
    for s in str:
        if s == " ":
            status += " "
        else:
            status += "_"
    return status

def saved():
    for s in status:
        if(s == "_"):
            return 0
    return 1

#function to print the status
def printStatus():
    for s in status:
        print(s, end = " ")
    print()

#take input of the guess from the user
def getInput():
    a = input("Guess an alphabet of the name in small letter ")
    #condition for null input
    if not a:
        print("Guess something fast...")
        a = getInput()
    #incase user inputs more than one alphabet then only the first alphabet is taken
    a = a[0]
    return a

#updating the status by just replacing the same index of status and word
def updateStatus(index):
    word[index], status[index] = status[index], word[index]

def check(inp):
    flag = 0
    for index in range(0, len(word)):
        if( word[index] == inp ):
            updateStatus(index)
            flag = 1
    if (flag == 0):
        print("Wrong Choice!")
        return 1
    else:
        print("Right Choice! Let's Go...")
        return 0

def already(inp):
    for index in range(0, len(status)):
        if( status[index] == inp ):
            return 1
    return 0

#printing the current damages state of batman according the count of wrong choices
def printBatman(index):
    if index < 5:
        print(batman[index])

#Dataset is the list of all the names
dataset = ["SCARLET WITCH", "VISION", "WOLVERINE", "DEADPOOL", "SHANG CHI", "ABOMINATION", "NICK FURY", "MANTIS",  
            "CAPTAIN AMERICA", "IRONMAN", "THANOS", "HAWKEYE", "BLACK PANTHER", "BLACK WIDOW", "THOR", "LOKI", "HULK",
            "SPIDERMAN", "WINTER SOLDIER", "ULTRON", "ODIN", "MANDARIN", "HELA", "DOCTOR STRANGE", "WONG",
            "CAPTAIN MARVEL", "ANTMAN", "WASP", "STARLORD", "GAMORA", "NEBULA", "GROOT", "ROCKET", "BLADE", "EGO",
            "RED SKULL", "MYSTERIO", "VENOM", "DOCTOR OCTOPUS", "GREEN GOBLIN", "SCORPION", "VULTURE", "SANDMAN",
            "ELECTRO", "MORBIUS", "RIOT", "CARNAGE", "WAR MACHINE", "VALKYRIE", "LIZARD"]

killIndex = 0 #count of the number of wrong choices
marvel = random.choice(dataset)
word = toArray(marvel.lower())
#status is the blank spaces at the top depicting the number of alphabets in the word
status = makeStatus(word)

clear()
print(intro)
print("Batman is in danger!!!\nGuess who has come to save him from the MARVEL Universe...")
print("You have 5 lives each time you make a wrong choice Batman looses a limb")
print("After your first choice you will see the blanks at the top of the screen depicting the alphabets in the saviour's name\n")

while ( killIndex < 5  and not saved() ):
    inp = getInput()
    clear()
    if (already(inp)):
        print("Already used, try something else.")
    elif (check(inp)):
        killIndex += 1
    printStatus()
    printBatman(killIndex)

if(saved() ):
    clear()
    print(won)
    print("You Won! The Batman is saved")
else:
    clear()
    print(lost)
    print(f"{marvel} came for rescue\nBut alas! The Batman is dead...")
